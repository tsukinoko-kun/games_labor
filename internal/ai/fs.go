package ai

import (
	"net/http"
	"os"
	unixpath "path"
	"path/filepath"
	"runtime"
	"strings"

	"github.com/google/uuid"
)

// for files generated by ai
var tempDir string

func init() {
	var err error
	tempDir, err = os.MkdirTemp("", "gameslabor")
	if err != nil {
		panic(err)
	}
}

func FullFilename(filename string) string {
	return filepath.Join(tempDir, strings.TrimPrefix(filename, "/ai/"))
}

func Handler(w http.ResponseWriter, r *http.Request) {
	filename := FullFilename(r.URL.Path)
	http.ServeFile(w, r, filename)
}

func Cleanup() {
	_ = os.RemoveAll(tempDir)
	_ = qdrantClient.Close()
}

func saveOgg(audio []byte) (string, error) {
	filename := filepath.Join(tempDir, uuid.New().String()+".ogg")
	err := os.WriteFile(filename, audio, 0644)
	if err != nil {
		return "", err
	}
	return filenameToServePath(filename)
}

func filenameToServePath(name string) (string, error) {
	p, err := filepath.Rel(tempDir, name)
	if err != nil {
		return p, err
	}
	if runtime.GOOS == "windows" {
		p = strings.ReplaceAll(p, "\\", "/")
	}
	return unixpath.Join("/ai", p), nil
}
